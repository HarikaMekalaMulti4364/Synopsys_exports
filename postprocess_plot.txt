import cv2

def plot_boxes(image_path, boxes_dict, output_path):
    """
    Plots all bounding boxes on an image and saves the result.

    :param image_path: Path to the input image.
    :param boxes_dict: List of dictionaries with bounding box details.
                       Each dictionary should contain 'category_id', 'score', and 'bbox' (as [x_min, y_min, width, height]).
    :param output_path: Path to save the output image with plotted boxes.
    """
    # Read the image
    image = cv2.imread(image_path)
    
    # Iterate over all the boxes and plot them
    for box in boxes_dict:
        x_min, y_min, width, height = box['bbox']
        x_max = x_min + width
        y_max = y_min + height
        
        # Draw the rectangle on the image
        cv2.rectangle(image, (x_min, y_min), (x_max, y_max), color=(0, 255, 0), thickness=2)
        
        # Optionally, you can add category_id and score as text on the image
        label = f"ID: {box['category_id']} Score: {box['score']:.2f}"
        cv2.putText(image, label, (x_min, y_min - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)
    
    # Save the image with plotted boxes
    cv2.imwrite(output_path, image)

# Example usage
image_path = 'input.jpg'
boxes_dict = [
    {'category_id': 1, 'score': 0.95, 'bbox': [50, 50, 100, 100]},
    {'category_id': 2, 'score': 0.90, 'bbox': [200, 200, 100, 100]}
]  # Example bounding boxes dict
output_path = 'output.jpg'

plot_boxes(image_path, boxes_dict, output_path)
